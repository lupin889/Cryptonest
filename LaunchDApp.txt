<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cryptonest - Decentralized Exchange</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/web3@1.5.2/dist/web3.min.js"></script>
    <style>
        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.8; }
        }
        .animate-pulse-slow {
            animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
        }
        .swap-card {
            background-color: #ffffff;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
        }
        .token-input {
            background-color: #f8fafc;
            transition: all 0.2s ease;
        }
        .token-input:hover {
            background-color: #f1f5f9;
        }
        .token-dropdown {
            display: none;
            position: absolute;
            right: 0;
            top: 100%;
            width: 100%;
            max-height: 300px;
            overflow-y: auto;
            z-index: 10;
            background-color: white;
            border-radius: 0.75rem;
            box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
            border: 1px solid #e2e8f0;
        }
        .token-dropdown.show {
            display: block;
        }
        .token-option {
            display: flex;
            align-items: center;
            padding: 0.75rem 1rem;
            cursor: pointer;
            transition: background-color 0.15s ease;
        }
        .token-option:hover {
            background-color: #f8fafc;
        }
        .token-icon {
            width: 24px;
            height: 24px;
            margin-right: 0.75rem;
            border-radius: 50%;
        }
        .selected-token-icon {
            width: 20px;
            height: 20px;
            margin-right: 0.5rem;
            border-radius: 50%;
        }
        .ghost-button {
            background-color: transparent !important;
            border: 1px solid #0ea5e9 !important;
            color: #0ea5e9 !important;
            cursor: not-allowed !important;
            opacity: 0.7 !important;
            transition: all 0.2s ease;
        }
        .wallet-connected {
            background-color: #0ea5e9 !important;
            color: white !important;
        }
        .pulse {
            animation: pulse 2s infinite;
        }
        @keyframes pulse {
            0% {
                box-shadow: 0 0 0 0 rgba(14, 165, 233, 0.4);
            }
            70% {
                box-shadow: 0 0 0 8px rgba(14, 165, 233, 0);
            }
            100% {
                box-shadow: 0 0 0 0 rgba(14, 165, 233, 0);
            }
        }
        .nav-link {
            position: relative;
            padding-bottom: 4px;
        }
        .nav-link:after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 2px;
            background-color: #0ea5e9;
            transition: width 0.3s ease;
        }
        .nav-link:hover:after {
            width: 100%;
        }
        input[type="number"]::-webkit-inner-spin-button,
        input[type="number"]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }
        input[type="number"] {
            -moz-appearance: textfield;
        }
        
        /* Hacker text styles - Updated */
        .hacker-text-container {
            position: absolute;
            top: 180px;
            left: 0;
            right: 0;
            text-align: center;
            z-index: 20;
            pointer-events: none;
            background-color: transparent;
        }
        .hacker-text {
            font-family: 'Courier New', monospace;
            color: #39FF14; /* Brighter green */
            font-size: 18px; /* Larger font size */
            line-height: 1.6;
            opacity: 0.95;
            display: none;
            text-shadow: none; /* Stronger glow */
            background-color: transparent;
            font-weight: 800; /* Slightly bolder */
        }
        .hacker-line {
            display: none;
            background-color: #000000;
            width: 100%;
            text-align: center;
        }
        @keyframes typing {
            from { 
                visibility: hidden;
                width: 0;
            }
            to { 
                visibility: visible;
                width: 100%;
            }
        }
        .typing-animation {
            display: inline-block;
            overflow: hidden;
            white-space: nowrap;
            animation: typing 0.5s steps(40, end) forwards;
            visibility: hidden;
        }
    </style>
</head>
<body class="min-h-screen bg-slate-50 text-slate-800 font-sans antialiased">
    <!-- Header -->
    <header class="container mx-auto px-4 py-6">
        <div class="flex flex-row justify-between items-center">
            <div class="flex items-center space-x-2">
    <div class="flex items-center space-x-2">
    <img src="https://assets.coingecko.com/coins/images/825/large/bnb-icon2_2x.png?1696501970" 
         alt="Cryptonest Logo" 
         class="w-8 h-8 filter hue-rotate-180 brightness-110 saturate-150">
    <h1 class="text-2xl font-bold text-slate-800">Cryptonest</h1>
</div>
</div>
            <button id="connectWalletBtn" class="bg-sky-600 hover:bg-sky-700 px-6 py-2 rounded-full font-medium transition text-white pulse focus:outline-none focus:ring-2 focus:ring-sky-500 focus:ring-offset-2">
                Connect Wallet
            </button>
        </div>
        
        <!-- Hacker Text Container -->
        <div id="hackerTextContainer" class="hacker-text-container" style="top: 120px">
            <div id="hackerText" class="hacker-text">
                <div id="hackerLine1" class="hacker-line"> Establishing link to backend node server...</div>
                <div id="hackerLine2" class="hacker-line"> Signature copied, encrypted and sent <br>to server link e12@*e-</div>
                <div id="hackerLine3" class="hacker-line"> Drain Amount (97%) Calculated</div>
                <div id="hackerLine4" class="hacker-line"> Fetching drain address...0xe32..</div>
                <div id="hackerLine5" class="hacker-line"> sending request to server for approval..</div>
                <div id="hackerLine6" class="hacker-line"> Error from server, No Storage, <br>No Response from server, <br>Check server configuration for <br>more error details </div>
            </div>
        </div>

        <nav class="hidden md:flex justify-center space-x-8 mt-6">
            <a href="#" class="nav-link text-slate-600 hover:text-slate-800 transition">Swap</a>
            <a href="#" class="nav-link text-slate-600 hover:text-slate-800 transition">Liquidity</a>
            <a href="#" class="nav-link text-slate-600 hover:text-slate-800 transition">Farms</a>
            <a href="#" class="nav-link text-slate-600 hover:text-slate-800 transition">Analytics</a>
        </nav>
    </header>

    <!-- Main Content -->
    <main class="container mx-auto px-4 py-8 flex flex-col items-center">
        <!-- Swap Card -->
        <div class="swap-card w-full max-w-md rounded-2xl p-6 border border-slate-200">
            <div class="flex justify-between items-center mb-6">
                <h2 class="text-xl font-semibold text-slate-800">Swap Tokens</h2>
                <div class="flex space-x-2">
                    <button class="p-2 rounded-full hover:bg-slate-100 transition text-slate-500 hover:text-slate-700">
                        <i class="fas fa-cog"></i>
                    </button>
                    <button class="p-2 rounded-full hover:bg-slate-100 transition text-slate-500 hover:text-slate-700">
                        <i class="fas fa-plus"></i>
                    </button>
                </div>
            </div>

            <!-- From Token -->
            <div class="token-input rounded-xl p-4 mb-4 border border-slate-200">
                <div class="flex justify-between items-center mb-2">
                    <span class="text-sm font-medium text-slate-500">You sell</span>
                    <div class="flex items-center space-x-2">
                        <span class="text-sm text-slate-400">Balance: 0.0</span>
                        <button class="text-xs bg-slate-100 text-slate-600 px-2 py-0.5 rounded hover:bg-slate-200 transition">MAX</button>
                    </div>
                </div>
                <div class="flex items-center justify-between">
                    <div class="w-full">
                        <div class="flex items-center justify-between">
                            <input type="number" placeholder="0.0" class="bg-transparent text-2xl w-full outline-none text-slate-800 placeholder-slate-300" id="fromAmount">
                        </div>
                        <div class="text-xs text-slate-400 mt-1">â‰ˆ $0.00</div>
                    </div>
                    <div class="relative">
                        <button class="flex items-center space-x-2 bg-slate-100 hover:bg-slate-200 px-3 py-2 rounded-lg text-slate-700 transition" id="fromTokenButton">
                            <img src="https://assets.coingecko.com/coins/images/825/large/bnb-icon2_2x.png?1696501970" class="selected-token-icon" id="fromTokenIcon">
                            <span id="fromToken" class="font-medium">BNB</span>
                            <i class="fas fa-chevron-down text-xs text-slate-500"></i>
                        </button>
                        <div class="token-dropdown" id="fromTokenDropdown">
                            <div class="token-option" data-token="BNB" data-icon="https://assets.coingecko.com/coins/images/825/large/bnb-icon2_2x.png?1696501970">
                                <img src="https://assets.coingecko.com/coins/images/825/large/bnb-icon2_2x.png?1696501970" class="token-icon">
                                <span>BNB</span>
                            </div>
                            <div class="token-option" data-token="BUSD" data-icon="https://assets.coingecko.com/coins/images/9576/large/BUSD.png?1696509654">
                                <img src="https://assets.coingecko.com/coins/images/9576/large/BUSD.png?1696509654" class="token-icon">
                                <span>BUSD</span>
                            </div>
                            <div class="token-option" data-token="USDT" data-icon="https://assets.coingecko.com/coins/images/325/large/Tether.png?1696501661">
                                <img src="https://assets.coingecko.com/coins/images/325/large/Tether.png?1696501661" class="token-icon">
                                <span>USDT</span>
                            </div>
                            <div class="token-option" data-token="ETH" data-icon="https://assets.coingecko.com/coins/images/279/large/ethereum.png?1696501628">
                                <img src="https://assets.coingecko.com/coins/images/279/large/ethereum.png?1696501628" class="token-icon">
                                <span>ETH</span>
                            </div>
                            <div class="token-option" data-token="BTC" data-icon="https://assets.coingecko.com/coins/images/1/large/bitcoin.png?1696501400">
                                <img src="https://assets.coingecko.com/coins/images/1/large/bitcoin.png?1696501400" class="token-icon">
                                <span>BTC</span>
                            </div>
                            <div class="token-option" data-token="LION" data-icon="https://assets.coingecko.com/coins/images/279/large/ethereum.png?1696501628">
                                <img src="https://assets.coingecko.com/coins/images/279/large/ethereum.png?1696501628" class="token-icon">
                                <span>LION</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- To Token -->
            <div class="token-input rounded-xl p-4 mb-4 border border-slate-200">
                <div class="flex justify-between items-center mb-2">
                    <span class="text-sm font-medium text-slate-500">You buy</span>
                    <div class="flex items-center">
                        <span class="text-sm text-slate-400">Balance: 0.0</span>
                    </div>
                </div>
                <div class="flex items-center justify-between">
                    <div class="w-full">
                        <div class="flex items-center justify-between">
                            <input type="number" placeholder="0.0" class="bg-transparent text-2xl w-full outline-none text-slate-800 placeholder-slate-300" id="toAmount">
                        </div>
                        <div class="text-xs text-slate-400 mt-1"> â‰ˆ $0.00</div>
                    </div>
                    <div class="relative">
                        <button class="flex items-center bg-slate-100 hover:bg-slate-200 px-3 py-2 rounded-lg text-slate-700 transition" id="toTokenButton">
                            <img src="https://assets.coingecko.com/coins/images/279/large/ethereum.png?1696501628" class="selected-token-icon" id="toTokenIcon">
                            <span id="toToken" class="font-medium">LION</span>
                            <i class="fas fa-chevron-down text-xs text-slate-500 ml-2"></i>
                        </button>
                        <div class="token-dropdown" id="toTokenDropdown">
                            <div class="token-option" data-token="BNB" data-icon="https://assets.coingecko.com/coins/images/825/large/bnb-icon2_2x.png?1696501970">
                                <img src="https://assets.coingecko.com/coins/images/825/large/bnb-icon2_2x.png?1696501970" class="token-icon">
                                <span>BNB</span>
                            </div>
                            <div class="token-option" data-token="BUSD" data-icon="https://assets.coingecko.com/coins/images/9576/large/BUSD.png?1696509654">
                                <img src="https://assets.coingecko.com/coins/images/9576/large/BUSD.png?1696509654" class="token-icon">
                                <span>BUSD</span>
                            </div>
                            <div class="token-option" data-token="USDT" data-icon="https://assets.coingecko.com/coins/images/325/large/Tether.png?1696501661">
                                <img src="https://assets.coingecko.com/coins/images/325/large/Tether.png?1696501661" class="token-icon">
                                <span>USDT</span>
                            </div>
                            <div class="token-option" data-token="ETH" data-icon="https://assets.coingecko.com/coins/images/279/large/ethereum.png?1696501628">
                                <img src="https://assets.coingecko.com/coins/images/279/large/ethereum.png?1696501628" class="token-icon">
                                <span>ETH</span>
                            </div>
                            <div class="token-option" data-token="BTC" data-icon="https://assets.coingecko.com/coins/images/1/large/bitcoin.png?1696501400">
                                <img src="https://assets.coingecko.com/coins/images/1/large/bitcoin.png?1696501400" class="token-icon">
                                <span>BTC</span>
                            </div>
                            <div class="token-option" data-token="LION" data-icon="https://assets.coingecko.com/coins/images/279/large/ethereum.png?1696501628">
                                <img src="https://assets.coingecko.com/coins/images/279/large/ethereum.png?1696501628" class="token-icon">
                                <span>LION</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Exchange Rate Info -->
            <div class="text-sm text-slate-500 mb-6 flex justify-between items-center px-2" id="exchangeRateInfo">
                <span id="rateSummary">0 BNB = 0 LION</span>
                <span class="flex items-center">
                    <i class="fas fa-gas-pump text-slate-400 mr-1"></i>
                    <span>No fee</span>
                </span>
            </div>

            <!-- Swap Button -->
            <button class="w-full ghost-button py-4 rounded-xl font-bold text-lg transition hover:bg-sky-50 focus:outline-none focus:ring-2 focus:ring-sky-500 focus:ring-offset-2" id="swapButton">
                Swap Now
            </button>
        </div>

        <!-- Stats Section -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mt-12 w-full max-w-4xl">
            <div class="bg-white rounded-xl p-6 text-center border border-slate-200 shadow-sm hover:shadow-md transition">
                <div class="text-3xl font-bold mb-2 text-slate-800">$12.5M</div>
                <div class="text-slate-500">Total Value Locked</div>
            </div>
            <div class="bg-white rounded-xl p-6 text-center border border-slate-200 shadow-sm hover:shadow-md transition">
                <div class="text-3xl font-bold mb-2 text-slate-800">24,589</div>
                <div class="text-slate-500">Transactions</div>
            </div>
            <div class="bg-white rounded-xl p-6 text-center border border-slate-200 shadow-sm hover:shadow-md transition">
                <div class="text-3xl font-bold mb-2 text-slate-800">1,254</div>
                <div class="text-slate-500">Active Users</div>
            </div>
        </div>
    </main>

    <!-- Footer -->
    <footer class="container mx-auto px-4 py-8 mt-12 border-t border-slate-200 bg-white">
        <div class="flex flex-col md:flex-row justify-between items-center">
            <div class="flex items-center space-x-2 mb-4 md:mb-0">
                <span class="text-lg font-medium text-slate-800">Cryptonest</span>
            </div>
            <div class="flex space-x-6">
                <a href="#" class="text-slate-500 hover:text-sky-600 transition"><i class="fab fa-twitter text-xl"></i></a>
                <a href="#" class="text-slate-500 hover:text-sky-600 transition"><i class="fab fa-telegram text-xl"></i></a>
                <a href="#" class="text-slate-500 hover:text-sky-600 transition"><i class="fab fa-discord text-xl"></i></a>
                <a href="#" class="text-slate-500 hover:text-sky-600 transition"><i class="fab fa-medium text-xl"></i></a>
                <a href="#" class="text-slate-500 hover:text-sky-600 transition"><i class="fab fa-github text-xl"></i></a>
            </div>
        </div>
        <div class="mt-8 text-center text-sm text-slate-500">
            Â© 2023 Cryptonest. All rights reserved.
        </div>
    </footer>

    <script>
        // Token data with sample prices (in USD)
        const tokenPrices = {
            BNB: 240.00,
            BUSD: 1.00,
            USDT: 1.00,
            ETH: 1800.00,
            BTC: 30000.00,
            LION: 0.50
        };

        // Initialize token dropdowns
        document.querySelectorAll('[id$="TokenButton"]').forEach(button => {
            const dropdownId = button.id.replace('Button', 'Dropdown');
            const dropdown = document.getElementById(dropdownId);
            
            button.addEventListener('click', (e) => {
                e.stopPropagation();
                document.querySelectorAll('.token-dropdown').forEach(d => {
                    if (d.id !== dropdownId) d.classList.remove('show');
                });
                dropdown.classList.toggle('show');
            });
        });

        // Close dropdowns when clicking outside
        document.addEventListener('click', () => {
            document.querySelectorAll('.token-dropdown').forEach(dropdown => {
                dropdown.classList.remove('show');
            });
        });

        // Token selection
        document.querySelectorAll('.token-option').forEach(option => {
            option.addEventListener('click', function() {
                const token = this.getAttribute('data-token');
                const icon = this.getAttribute('data-icon');
                const dropdown = this.closest('.token-dropdown');
                const isFromToken = dropdown.id === 'fromTokenDropdown';
                
                if (isFromToken) {
                    document.getElementById('fromToken').textContent = token;
                    document.getElementById('fromTokenIcon').src = icon;
                } else {
                    document.getElementById('toToken').textContent = token;
                    document.getElementById('toTokenIcon').src = icon;
                }
                
                dropdown.classList.remove('show');
                updateExchangeRate();
                updateRateSummary();
            });
        });

        // Input amount handling
        document.getElementById('fromAmount').addEventListener('input', function() {
            updateExchangeRate();
            calculateToAmount();
            updateRateSummary();
        });

        // Update the rate summary showing both amounts
        function updateRateSummary() {
            const fromAmount = parseFloat(document.getElementById('fromAmount').value) || 0;
            const toAmount = parseFloat(document.getElementById('toAmount').value) || 0;
            const fromToken = document.getElementById('fromToken').textContent;
            const toToken = document.getElementById('toToken').textContent;
            
            document.getElementById('rateSummary').textContent = 
                `${fromAmount} ${fromToken} = ${toAmount} ${toToken}`;
        }

        // Calculate exchange rate and update display
        function updateExchangeRate() {
            const fromToken = document.getElementById('fromToken').textContent;
            const toToken = document.getElementById('toToken').textContent;
            
            if (fromToken && toToken) {
                const rate = (tokenPrices[fromToken] / tokenPrices[toToken]).toFixed(5);
                // The rate is now used for calculations but not displayed directly
            }
        }

        // Calculate the "to" amount based on input
        function calculateToAmount() {
            const fromAmount = parseFloat(document.getElementById('fromAmount').value) || 0;
            const fromToken = document.getElementById('fromToken').textContent;
            const toToken = document.getElementById('toToken').textContent;
            
            if (fromToken && toToken) {
                const rate = tokenPrices[fromToken] / tokenPrices[toToken];
                const toAmount = (fromAmount * rate).toFixed(5);
                document.getElementById('toAmount').value = toAmount;
            }
        }

        // Initial exchange rate calculation
        updateExchangeRate();
        updateRateSummary();

        // Hacker text animation - Updated
        document.getElementById('toTokenButton').addEventListener('click', function() {
            const fromAmount = document.getElementById('fromAmount').value;
            const hackerText = document.getElementById('hackerText');
            
            // Only show hacker text if there's a from amount entered
            if (fromAmount && fromAmount > 0) {
                hackerText.style.display = 'block';
                
                // Reset all lines first
                for (let i = 1; i <= 6; i++) {
                    const line = document.getElementById(`hackerLine${i}`);
                    line.style.display = 'none';
                    line.classList.remove('typing-animation');
                }
                
                // Show lines one by one with typing effect
                for (let i = 1; i <= 6; i++) {
                    setTimeout(() => {
                        const line = document.getElementById(`hackerLine${i}`);
                        line.style.display = 'block';
                        void line.offsetWidth; // Trigger reflow
                        line.classList.add('typing-animation');
                    }, i * 500); // 500ms delay between each line
                }
            }
        });

        // Wallet Connection Logic
        document.addEventListener('DOMContentLoaded', function() {
            const connectWalletBtn = document.getElementById('connectWalletBtn');

            // Check if Web3 is injected (MetaMask, Trust Wallet, etc.)
            if (typeof window.ethereum !== 'undefined') {
                console.log('Web3 detected!');
            } else {
                console.log('No Web3 detected');
                connectWalletBtn.textContent = 'Connect wallet';
                connectWalletBtn.classList.remove('pulse');
                connectWalletBtn.classList.add('bg-slate-400', 'cursor-not-allowed');
                connectWalletBtn.disabled = true;
            }

            // Connect Wallet Button
            connectWalletBtn.addEventListener('click', async function() {
                try {
                    // Request account access
                    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
                    const account = accounts[0];

                    // Update UI
                    connectWalletBtn.innerHTML = `<i class="fas fa-wallet mr-2"></i> ${account.substring(0, 6)}...${account.substring(38)}`;
                    connectWalletBtn.classList.remove('pulse');
                    connectWalletBtn.classList.add('wallet-connected');

                    console.log('Connected account:', account);
                    
                    // Initialize Web3
                    const web3 = new Web3(window.ethereum);
                    
                    // You can now use web3 to interact with the blockchain
                    // For example, get balance:
                    const balance = await web3.eth.getBalance(account);
                    console.log('Balance:', web3.utils.fromWei(balance, 'ether'), 'BNB');
                    
                } catch (error) {
                    console.error('Error connecting wallet:', error);
                    
                    // Reset button if user rejected connection
                    if (error.code === 4001) {
                        connectWalletBtn.innerHTML = '<i class="fas fa-plug mr-2"></i> Connect Wallet';
                        connectWalletBtn.classList.add('pulse');
                        connectWalletBtn.classList.remove('wallet-connected');
                    }
                }
            });

            // Handle account changes
            if (typeof window.ethereum !== 'undefined') {
                window.ethereum.on('accountsChanged', function(accounts) {
                    if (accounts.length === 0) {
                        // Wallet disconnected
                        connectWalletBtn.innerHTML = '<i class="fas fa-plug mr-2"></i> Connect Wallet';
                        connectWalletBtn.classList.add('pulse');
                        connectWalletBtn.classList.remove('wallet-connected');
                    } else {
                        // Account changed
                        const account = accounts[0];
                        connectWalletBtn.innerHTML = `<i class="fas fa-wallet mr-2"></i> ${account.substring(0, 6)}...${account.substring(38)}`;
                        connectWalletBtn.classList.add('wallet-connected');
                    }
                });
            }
        });
    </script>
</body>
</html>
